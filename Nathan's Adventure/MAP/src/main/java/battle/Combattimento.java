/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package battle;

import java.awt.Color;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTextPane;
import javax.swing.border.Border;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultCaret;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author valen
 */
public class Combattimento extends javax.swing.JFrame {

    private String nomeNemico;
    private int vitaNemico;
    private Inventario inventory;
    private boolean isActive = false;
    private boolean continua = true;
    private int turno = 1;
    private String imagePath;

    /**
     * Creates new form ProvaCombattimento
     */
    public Combattimento(String nomeNemico, int vitaNemico, String imagePath) {
        initComponents();

        this.setLocationRelativeTo(null);

        Border label_borded = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 0, 102));
        esci.setBorder(label_borded);
        minimizza.setBorder(label_borded);

        Border panel_border = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(255, 204, 0));
        jPanel2.setBorder(panel_border);
        jPanel_buttons.setBorder(panel_border);
        jPanel_father.setBorder(panel_border);

        this.nomeNemico = nomeNemico;
        this.vitaNemico = vitaNemico;
        this.inventory = new Inventario();
        this.isActive = true;
        this.imagePath = imagePath;

        jLabel_enemyName.setText(nomeNemico);

        DefaultCaret caret = (DefaultCaret) console.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        visualizzaVitaNemico.setMaximum(vitaNemico);
        visualizzaVitaNemico.setMinimum(0);
        visualizzaVitaNemico.setStringPainted(true);
        attaccoArmato.setEnabled(false);
        image.insertIcon(new ImageIcon(imagePath));
    }

    public Combattimento(String nomeNemico, int vitaNemico, String imagePath, boolean isActive, boolean continua, int turno) {
        initComponents();

        this.setLocationRelativeTo(null);

        Border label_borded = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 0, 102));
        esci.setBorder(label_borded);
        minimizza.setBorder(label_borded);

        Border panel_border = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(255, 204, 0));
        jPanel2.setBorder(panel_border);
        jPanel_buttons.setBorder(panel_border);
        jPanel_father.setBorder(panel_border);

        this.nomeNemico = nomeNemico;
        this.vitaNemico = vitaNemico;
        this.inventory = new Inventario();
        this.isActive = true;
        this.continua = continua;
        this.turno = turno;
        this.imagePath = imagePath;

        jLabel_enemyName.setText(nomeNemico);

        DefaultCaret caret = (DefaultCaret) console.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        visualizzaVitaNemico.setMaximum(vitaNemico);
        visualizzaVitaNemico.setMinimum(0);
        visualizzaVitaNemico.setStringPainted(true);
        attaccoArmato.setEnabled(false);
        image.insertIcon(new ImageIcon(imagePath));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel_father = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        image = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextPane();
        visualizzaVitaNemico = new javax.swing.JProgressBar();
        jPanel_buttons = new javax.swing.JPanel();
        pugno = new javax.swing.JButton();
        inventario = new javax.swing.JButton();
        attaccoArmato = new javax.swing.JButton();
        schiva = new javax.swing.JButton();
        equipaggia = new javax.swing.JButton();
        help = new javax.swing.JButton();
        visualizzaArma = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        esci = new javax.swing.JLabel();
        minimizza = new javax.swing.JLabel();
        jLabel_enemyName = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jEditorPane1);

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);
        setResizable(false);

        jPanel_father.setBackground(new java.awt.Color(0, 0, 0));
        jPanel_father.setForeground(new java.awt.Color(102, 102, 102));

        image.setEditable(false);
        image.setBorder(new javax.swing.border.MatteBorder(null));
        image.setToolTipText("");
        jScrollPane1.setViewportView(image);

        console.setEditable(false);
        console.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 102, 102)));
        console.setFont(new java.awt.Font("Sylfaen", 0, 11)); // NOI18N
        console.setForeground(new java.awt.Color(255, 255, 255));
        console.setCaretColor(new java.awt.Color(255, 0, 51));
        console.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(console);

        visualizzaVitaNemico.setForeground(new java.awt.Color(102, 0, 102));

        jPanel_buttons.setBackground(new java.awt.Color(204, 153, 255));

        pugno.setBackground(new java.awt.Color(0, 0, 102));
        pugno.setFont(new java.awt.Font("Verdana Pro Cond Black", 1, 12)); // NOI18N
        pugno.setForeground(new java.awt.Color(255, 255, 255));
        pugno.setText("Pugno");
        pugno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pugnoActionPerformed(evt);
            }
        });

        inventario.setBackground(new java.awt.Color(0, 0, 102));
        inventario.setFont(new java.awt.Font("Verdana Pro Cond Black", 1, 12)); // NOI18N
        inventario.setForeground(new java.awt.Color(255, 255, 255));
        inventario.setText("Inventario");
        inventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventarioActionPerformed(evt);
            }
        });

        attaccoArmato.setBackground(new java.awt.Color(0, 0, 102));
        attaccoArmato.setFont(new java.awt.Font("Verdana Pro Cond Black", 1, 12)); // NOI18N
        attaccoArmato.setForeground(new java.awt.Color(255, 255, 255));
        attaccoArmato.setText("Attacco con arma");
        attaccoArmato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attaccoArmatoActionPerformed(evt);
            }
        });

        schiva.setBackground(new java.awt.Color(0, 0, 102));
        schiva.setFont(new java.awt.Font("Verdana Pro Cond Black", 1, 12)); // NOI18N
        schiva.setForeground(new java.awt.Color(255, 255, 255));
        schiva.setText("Schiva");
        schiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schivaActionPerformed(evt);
            }
        });

        equipaggia.setBackground(new java.awt.Color(0, 0, 102));
        equipaggia.setFont(new java.awt.Font("Verdana Pro Cond Black", 1, 12)); // NOI18N
        equipaggia.setForeground(new java.awt.Color(255, 255, 255));
        equipaggia.setText("Equipaggia");
        equipaggia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipaggiaActionPerformed(evt);
            }
        });

        help.setBackground(new java.awt.Color(0, 0, 102));
        help.setFont(new java.awt.Font("Verdana Pro Cond Black", 1, 12)); // NOI18N
        help.setForeground(new java.awt.Color(255, 255, 255));
        help.setText("Help");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        visualizzaArma.setEditable(false);

        javax.swing.GroupLayout jPanel_buttonsLayout = new javax.swing.GroupLayout(jPanel_buttons);
        jPanel_buttons.setLayout(jPanel_buttonsLayout);
        jPanel_buttonsLayout.setHorizontalGroup(
            jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_buttonsLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(inventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(equipaggia, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addGap(88, 88, 88)
                .addGroup(jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pugno, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attaccoArmato, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_buttonsLayout.createSequentialGroup()
                        .addComponent(schiva, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel_buttonsLayout.createSequentialGroup()
                        .addComponent(visualizzaArma, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        jPanel_buttonsLayout.setVerticalGroup(
            jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_buttonsLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schiva, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pugno, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inventario, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(visualizzaArma, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attaccoArmato, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equipaggia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 153, 255));

        esci.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        esci.setForeground(new java.awt.Color(0, 0, 102));
        esci.setText(" X ");
        esci.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        esci.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                esciMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                esciMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                esciMouseExited(evt);
            }
        });

        minimizza.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        minimizza.setForeground(new java.awt.Color(0, 0, 102));
        minimizza.setText(" - ");
        minimizza.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizzaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizzaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizzaMouseExited(evt);
            }
        });

        jLabel_enemyName.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_enemyName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_enemyName.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_enemyName, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(minimizza)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(esci)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(esci)
                            .addComponent(minimizza))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addComponent(jLabel_enemyName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel_fatherLayout = new javax.swing.GroupLayout(jPanel_father);
        jPanel_father.setLayout(jPanel_fatherLayout);
        jPanel_fatherLayout.setHorizontalGroup(
            jPanel_fatherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_fatherLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_fatherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel_buttons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(visualizzaVitaNemico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_fatherLayout.setVerticalGroup(
            jPanel_fatherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_fatherLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(visualizzaVitaNemico, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_buttons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_father, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_father, javax.swing.GroupLayout.PREFERRED_SIZE, 638, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public boolean isActive() {
        return isActive;
    }

    public JTextPane getConsolle() {
        return this.console;
    }

    public int getTurno() {
        return turno;
    }

    public void setTurno(int turno) {
        this.turno = turno;
    }

    public Inventario getInventory() {
        return this.inventory;
    }

    public int getVitaNemico() {
        return this.vitaNemico;
    }

    public String getNomeNemico() {
        return this.nomeNemico;
    }

    public String getImagePath() {
        return this.imagePath;
    }

    public boolean continua() {
        return continua;
    }

    public void setContinua(boolean continua) {
        this.continua = continua;
    }

    public void printWhenDead() {
        //dialoghi morte nemici
        
        if (nomeNemico.equals("Bandito Assonnato")) {
            System.out.print("\nBandito Assonnato:\"Aaarrghh se solo avessi avuto altri 5 minuti di sonno non mi avresti sconfitto così facilmente\".\n");
            System.out.println("Il Bandito Assonnato perde i sensi e si accascia sul letto.");
        }

        if (nomeNemico.equals("Bandito Infuriato")) {
            System.out.print("\nBandito Infuriato:\"Il mio padrone... mi vendichera'\".\n");
            System.out.println("Il Bandito Infuriato e' privo di forze e cade a terra.");
        }

        if (nomeNemico.equals("Malzar")) {
            System.out.print("\nMalzar:\"Maledetto! Ero cosi' vicino dall'ottenere un potere inimmaginabile\".\n");
            System.out.print("Malzar emette il suo ultimo rantolo e cade a terra, il rumore della sua caduta riecheggia in tutta la miniera.");
            System.out.println("\nGli schiavi, una volta appreso che il loro tiranno era stato sconfitto, scappano via.");
            
            System.out.println("\nHAI RICEVUTO LA SPADA DI MALZAR\n");
        }

        if (nomeNemico.equals("Demone")) {
            System.out.print("\nIl demone ti guarda dritto negli occhi... sembra come se volesse dirti qualcosa.\n");
            System.out.print("La creatura demoniaca inizia a dissolversi, ma prima di scomparire del tutto fuoriesce un diario dalle sue vesti.\n");
            System.out.println("Il demone si e' dissolto completamente e il diario cade al centro della stanza.");
        }

        System.out.println("HAI SCONFITO: " + nomeNemico + "!");
    }
    
    private void pugnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pugnoActionPerformed
        if (turno % 2 == 0) {

            continua = true;

            Random random = new Random();

            SimpleAttributeSet attribs = new SimpleAttributeSet();
            StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_RIGHT);
            console.setParagraphAttributes(attribs, true);

            StyledDocument document = (StyledDocument) console.getDocument();
            try {
                String s = "\nTU: Hai dato un pugno a " + nomeNemico + "\n";
                document.insertString(document.getLength(), s, null);
            } catch (BadLocationException ex) {
                Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
            }

            StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_LEFT);
            console.setParagraphAttributes(attribs, true);

            String s = "";

            try {

                switch (random.nextInt(3)) {

                    case 0:
                        s = nomeNemico.toUpperCase() + ": E questo lo chiami colpire? Picchia meglio mia sorella...\n";
                        break;

                    case 1:
                        s = nomeNemico.toUpperCase() + ": Ehi, mi stai sporcando i vestiti!\n";
                        break;

                    case 2:
                        s = nomeNemico.toUpperCase() + ": Picchi come una ragazzina...\n";
                        break;
                }

                document.insertString(document.getLength(), s, null);
            } catch (BadLocationException ex) {
                Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
            }

            vitaNemico = vitaNemico - 5;
            visualizzaVitaNemico.setValue(visualizzaVitaNemico.getMaximum() - vitaNemico);
            turno++;

            if (vitaNemico <= 0) {

                printWhenDead();

                isActive = false;
                pugno.setVisible(false);
                attaccoArmato.setVisible(false);
                schiva.setVisible(false);
                inventario.setVisible(false);
                equipaggia.setVisible(false);
                visualizzaArma.setVisible(false);
                help.setVisible(false);
                console.setSize(70, 70);
                continua = false;

                StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_CENTER);
                console.setParagraphAttributes(attribs, true);

                try {
                    Thread.sleep(500);
                    this.setDefaultCloseOperation(Combattimento.DISPOSE_ON_CLOSE);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
                }

                this.dispose();
            }
        }
    }//GEN-LAST:event_pugnoActionPerformed

    private void attaccoArmatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attaccoArmatoActionPerformed

        if ((turno % 2) == 0) {

            continua = true;
            Random random = new Random();

            SimpleAttributeSet attribs = new SimpleAttributeSet();
            StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_RIGHT);
            console.setParagraphAttributes(attribs, true);

            StyledDocument document = (StyledDocument) console.getDocument();
            try {
                String s = "\nTU: Hai attaccato " + nomeNemico + " con " + inventory.getNomeArma() + "\n";
                document.insertString(document.getLength(), s, null);
            } catch (BadLocationException ex) {
                Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
            }

            StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_LEFT);
            console.setParagraphAttributes(attribs, true);

            String s = "";

            try {
                switch (random.nextInt(3)) {

                    case 0:
                        s = nomeNemico.toUpperCase() + ": Questo non bastera' a fermarmi...\n";
                        break;

                    case 1:
                        s = nomeNemico.toUpperCase() + ": Che colpo da maestro!\n";
                        break;

                    case 2:
                        s = nomeNemico.toUpperCase() + ": Vedo che sai usare le armi eh?!\n";
                        break;
                }

                document.insertString(document.getLength(), s, null);
            } catch (BadLocationException ex) {
                Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
            }

            vitaNemico = vitaNemico - inventory.getDamageArma();
            visualizzaVitaNemico.setValue(visualizzaVitaNemico.getMaximum() - vitaNemico);

            turno++;

            if (vitaNemico <= 0) {
                isActive = false;
                pugno.setVisible(false);
                attaccoArmato.setVisible(false);
                schiva.setVisible(false);
                inventario.setVisible(false);
                equipaggia.setVisible(false);
                visualizzaArma.setVisible(false);
                help.setVisible(false);
                console.setSize(70, 70);
                continua = false;

                StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_CENTER);
                console.setParagraphAttributes(attribs, true);

                String stringaFinale = "COMPLIMENTI, HAI SCONFITO " + nomeNemico + "!";
                try {
                    document.insertString(document.getLength(), stringaFinale, null);

                    printWhenDead();

                    this.dispose();                                                                     //!!!
                } catch (BadLocationException ex) {
                    Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
                }

                try {
                    Thread.sleep(500);
                    this.setDefaultCloseOperation(Combattimento.DISPOSE_ON_CLOSE);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_attaccoArmatoActionPerformed

    private void schivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schivaActionPerformed
        Random random = new Random();

        if (((turno % 2) != 0) && continua) {

            continua = false;

            SimpleAttributeSet attribs = new SimpleAttributeSet();
            StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_RIGHT);
            console.setParagraphAttributes(attribs, true);

            StyledDocument document = (StyledDocument) console.getDocument();
            try {
                String s = "\nTU: Hai schivato l'attacco di " + nomeNemico + "\n";
                document.insertString(document.getLength(), s, null);
            } catch (BadLocationException ex) {
                Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
            }

            StyleConstants.setAlignment(attribs, StyleConstants.ALIGN_LEFT);
            console.setParagraphAttributes(attribs, true);

            String s = "";

            try {
                switch (random.nextInt(3)) {

                    case 0:
                        s = nomeNemico.toUpperCase() + ": Bastardo maledetto...\n";
                        break;

                    case 1:
                        s = nomeNemico.toUpperCase() + ": Non scappare al tuo destino!\n";
                        break;

                    case 2:
                        s = nomeNemico.toUpperCase() + ": Ehi codardo, non scappare!!\n";
                        break;
                }

                document.insertString(document.getLength(), s, null);
            } catch (BadLocationException ex) {
                Logger.getLogger(Combattimento.class.getName()).log(Level.SEVERE, null, ex);
            }
            turno++;
        }
    }//GEN-LAST:event_schivaActionPerformed

    private void inventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventarioActionPerformed
        inventory.setVisible(true);
    }//GEN-LAST:event_inventarioActionPerformed

    private void equipaggiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipaggiaActionPerformed
        if (inventory.getArma() != null) {
            attaccoArmato.setEnabled(true);
            visualizzaArma.setText("Arma in uso: " + inventory.getNomeArma());
        }
    }//GEN-LAST:event_equipaggiaActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        Help h = new Help();
        h.setVisible(true);
    }//GEN-LAST:event_helpActionPerformed

    private void esciMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_esciMouseClicked
        WarningExit we = new WarningExit();
        we.setVisible(true);
        we.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_esciMouseClicked

    private void esciMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_esciMouseEntered
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        esci.setBorder(label_border);
        esci.setForeground(Color.white);
    }//GEN-LAST:event_esciMouseEntered

    private void esciMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_esciMouseExited
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 0, 102));
        esci.setBorder(label_border);
        esci.setForeground(new Color(0, 0, 102));
    }//GEN-LAST:event_esciMouseExited

    private void minimizzaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizzaMouseClicked
        // TODO add your handling code here:

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizzaMouseClicked

    private void minimizzaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizzaMouseEntered
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white);
        minimizza.setBorder(label_border);
        minimizza.setForeground(Color.white);
    }//GEN-LAST:event_minimizzaMouseEntered

    private void minimizzaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizzaMouseExited
        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 0, 102));
        minimizza.setBorder(label_border);
        minimizza.setForeground(new Color(0, 0, 102));
    }//GEN-LAST:event_minimizzaMouseExited






    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attaccoArmato;
    private javax.swing.JTextPane console;
    private javax.swing.JButton equipaggia;
    private javax.swing.JLabel esci;
    private javax.swing.JButton help;
    private static javax.swing.JTextPane image;
    private javax.swing.JButton inventario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel_enemyName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_buttons;
    private javax.swing.JPanel jPanel_father;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel minimizza;
    private javax.swing.JButton pugno;
    private javax.swing.JButton schiva;
    private javax.swing.JTextField visualizzaArma;
    private javax.swing.JProgressBar visualizzaVitaNemico;
    // End of variables declaration//GEN-END:variables

}
